{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Market Place"
  },
  "tags": [
    {
      "name": "Users",
      "description": "API for user management"
    },
    {
      "name": "Login",
      "description": "User authentication"
    },
    {
      "name": "Products",
      "description": "API for product management"
    }
  ],
  "components": {
    "schemas": {
      "Users": {
        "type": "object",
        "required": ["firstName", "lastName", "email", "password"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The auto-generated id of the user"
          },
          "firstName": {
            "type": "string",
            "description": "The user's first name"
          },
          "lastName": {
            "type": "string",
            "description": "The user's last name"
          },
          "avatarURL": {
            "type": "string",
            "description": "The user's avatar"
          },
          "email": {
            "type": "string",
            "description": "The user's email"
          },
          "password": {
            "type": "string",
            "description": "The user's password"
          },
          "createdAt": {
            "type": "string",
            "description": "The date of the record's creation"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date of the record's last update"
          }
        },
        "example": {
          "firstName": "luis",
          "lastName": "Smit",
          "avatarURL": "https://example.com/avatar.jpg",
          "email": "luis.smit@test.cl",
          "password": "password"
        }
      },
      "Login": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "The user's email"
          },
          "password": {
            "type": "string",
            "description": "The user's password"
          }
        },
        "example": {
          "email": "luis.smit@test.cl",
          "password": "password"
        }
      },
      "Products": {
        "type": "object",
        "required": ["name", "description", "price", "URLimage"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The auto-generated id of the product"
          },
          "name": {
            "type": "string",
            "description": "The product's name"
          },
          "description": {
            "type": "string",
            "description": "The product's description"
          },
          "price": {
            "type": "integer",
            "description": "The product's price"
          },
          "URLimage": {
            "type": "string",
            "description": "The product's image"
          },
          "idUser": {
            "type": "integer",
            "description": "The auto-generated id of the user"
          },
          "createdAt": {
            "type": "string",
            "description": "The date of the record's creation"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date of the record's last update"
          }
        },
        "example": {
          "name": "Mesa",
          "description": "Mesa de color blanca",
          "price": 19.99,
          "URLimage": "image's URL",
          "password": "password"
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "paths": {
    "/users": {
      "post": {
        "summary": "Create a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Error to create a user"
          }
        }
      }
    },
    "/auth_user": {
      "post": {
        "summary": "Authenticate a user",
        "tags": ["Login"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The user's token",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjI4NzU1MjIyfQ.2cQ8V2X4cXyK7KbXvZIc3q5jRrFq3Zb8w7q0wJxX1mM"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/products": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all products",
        "tags": ["Products"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "travels": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Products"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error to get products"
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "tags": ["Products"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Products"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product": {
                      "$ref": "#/components/schemas/Products"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error to create a product"
          }
        }
      }
    },
    "/products/{id}": {
      "put": {
        "summary": "Update a product",
        "tags": ["Products"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The product's id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Products"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product": {
                      "$ref": "#/components/schemas/Products"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error to update the product"
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "tags": ["Products"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The product's id"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Error to delete the product"
          }
        }
      }
    }
  }
}
